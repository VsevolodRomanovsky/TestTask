{
  "openapi": "3.0.1",
  "info": {
    "title": "Danfoss TetTask Service API",
    "description": "Test Task",
    "version": "v1"
  },
  "paths": {
    "/api/Counter": {
      "post": {
        "tags": [
          "Counter"
        ],
        "summary": "Добавить новый счетчик",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Counter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Counter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Counter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Counter/byhouse": {
      "post": {
        "tags": [
          "Counter"
        ],
        "summary": "Добавить показания счетчика",
        "parameters": [
          {
            "name": "houseId",
            "in": "query",
            "description": "идентификатор дома",
            "schema": {
              "type": "integer",
              "description": "идентификатор дома",
              "format": "int32"
            }
          },
          {
            "name": "value",
            "in": "query",
            "description": "значение счетчика",
            "schema": {
              "type": "integer",
              "description": "значение счетчика",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Counter/byserialnumber": {
      "post": {
        "tags": [
          "Counter"
        ],
        "summary": "Добавить показания счетчика",
        "parameters": [
          {
            "name": "serialNumber",
            "in": "query",
            "description": "серийный номер счетчика",
            "schema": {
              "type": "string",
              "description": "серийный номер счетчика",
              "nullable": true
            }
          },
          {
            "name": "value",
            "in": "query",
            "description": "значение счетчика",
            "schema": {
              "type": "integer",
              "description": "значение счетчика",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/House": {
      "get": {
        "tags": [
          "House"
        ],
        "summary": "Получить список всех домов",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/House"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/House"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/House"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "House"
        ],
        "summary": "Добавить новый дом",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/House"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/House"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/House"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/House/meter/{counterMeter}": {
      "get": {
        "tags": [
          "House"
        ],
        "summary": "Найти дома с наименьшим или наибольшим показанием счетчика воды",
        "parameters": [
          {
            "name": "counterMeter",
            "in": "path",
            "description": "Входящий параметр типа Enum (MaxValue==0, MinValue==1)",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/CounterMeter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/House"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/House"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/House"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/House/{id}": {
      "get": {
        "tags": [
          "House"
        ],
        "summary": "Найти дом по Id",
        "operationId": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/House"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/House"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/House"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "House"
        ],
        "summary": "Удалить дом",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "House": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "addressLine": {
            "type": "string",
            "nullable": true
          },
          "street": {
            "type": "string",
            "nullable": true
          },
          "houseNumber": {
            "type": "string",
            "nullable": true
          },
          "counter": {
            "$ref": "#/components/schemas/Counter"
          }
        },
        "additionalProperties": false
      },
      "Counter": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "serialNumber": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "integer",
            "format": "int64"
          },
          "house": {
            "$ref": "#/components/schemas/House"
          },
          "houseId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "CounterMeter": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      }
    }
  }
}